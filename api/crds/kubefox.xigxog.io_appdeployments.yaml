---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: appdeployments.kubefox.xigxog.io
spec:
  group: kubefox.xigxog.io
  names:
    kind: AppDeployment
    listKind: AppDeploymentList
    plural: appdeployments
    shortNames:
    - appdep
    - appdeps
    - app
    - apps
    singular: appdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.appName
      name: App
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].status
      name: Available
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=='Progressing')].status
      name: Progressing
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppDeployment is the Schema for the AppDeployments API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          details:
            description: AppDeploymentDetails defines additional details of AppDeployment
            properties:
              components:
                additionalProperties:
                  properties:
                    description:
                      type: string
                    title:
                      type: string
                  type: object
                type: object
              description:
                type: string
              title:
                type: string
            type: object
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AppDeploymentSpec defines the desired state of AppDeployment
            properties:
              appName:
                type: string
              branch:
                type: string
              commit:
                pattern: ^[a-z0-9]{40}$
                type: string
              commitTime:
                format: date-time
                type: string
              components:
                additionalProperties:
                  properties:
                    defaultHandler:
                      type: boolean
                    dependencies:
                      additionalProperties:
                        properties:
                          type:
                            enum:
                            - DBAdapter
                            - KubeFox
                            - HTTPAdapter
                            type: string
                        required:
                        - type
                        type: object
                      type: object
                    envVarSchema:
                      additionalProperties:
                        properties:
                          required:
                            default: false
                            type: boolean
                          type:
                            enum:
                            - Array
                            - Boolean
                            - Number
                            - String
                            type: string
                        required:
                        - required
                        type: object
                      type: object
                    hash:
                      pattern: ^[a-z0-9]{32}$
                      type: string
                    image:
                      type: string
                    routes:
                      items:
                        properties:
                          envVarSchema:
                            additionalProperties:
                              properties:
                                required:
                                  default: false
                                  type: boolean
                                type:
                                  enum:
                                  - Array
                                  - Boolean
                                  - Number
                                  - String
                                  type: string
                              required:
                              - required
                              type: object
                            type: object
                          id:
                            type: integer
                          priority:
                            type: integer
                          rule:
                            type: string
                        required:
                        - id
                        - rule
                        type: object
                      type: array
                    type:
                      enum:
                      - DBAdapter
                      - KubeFox
                      - HTTPAdapter
                      type: string
                  required:
                  - hash
                  - type
                  type: object
                minProperties: 1
                type: object
              containerRegistry:
                type: string
              imagePullSecretName:
                type: string
              repoURL:
                type: string
              tag:
                type: string
              version:
                description: |-
                  Version of the defined App. Use of semantic versioning is recommended.
                  Once set the AppDeployment spec becomes immutable.
                type: string
            required:
            - appName
            - commit
            - commitTime
            - components
            type: object
          status:
            description: AppDeploymentStatus defines the observed state of AppDeployment
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              problems:
                items:
                  properties:
                    causes:
                      description: Resources and attributes causing problem.
                      items:
                        properties:
                          kind:
                            type: string
                          name:
                            type: string
                          observedGeneration:
                            description: |-
                              ObservedGeneration represents the .metadata.generation of the
                              ProblemSource that the problem was generated from. For instance, if the
                              ProblemSource .metadata.generation is currently 12, but the
                              observedGeneration is 9, the problem is out of date with respect to the
                              current state of the instance.
                            format: int64
                            type: integer
                          path:
                            description: Path of source object attribute causing problem.
                            type: string
                          value:
                            description: |-
                              Value causing problem. Pointer is used to distinguish between not set and
                              empty string.
                            type: string
                        required:
                        - kind
                        type: object
                      type: array
                    message:
                      type: string
                    type:
                      type: string
                  required:
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
